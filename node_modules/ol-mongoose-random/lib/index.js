'use strict'
const _ = require('lodash');
function ol(schema){
  schema.statics.randomInit = randomInit
  schema.statics.exec = exec
  schema.statics.one = one
  schema.statics.conditions = conditions
  schema.statics.fields = fields
  schema.statics.options = options
}

function exec(){
	let conditions = this.schema.olRandomOptions.conditions,
    fields = this.schema.olRandomOptions.fields,
    options = this.schema.olRandomOptions.options;

	return this.find(conditions, fields, options).exec()
		.then((collection) => {
			if(collection.length === 0)
				return collection;
			if(this.schema.olRandomOptions.one)
				return collection[_.random(0, collection.length)]
			return _.sampleSize(collection, this.schema.olRandomOptions.limit)
		})
		.catch((err) => {
			return Promise.reject(new Error(err))
		});
}

function randomInit(){
  this.schema.olRandomOptions = {
    one: false,
    conditions: null,
    fields: null,
    options: null
  }
  return this;
}

function one(){
  this.schema.olRandomOptions.one = true;
  return this;
}

function conditions(conditions){
  this.schema.olRandomOptions.conditions = conditions || {};
  return this;
}

function fields(fields){
  this.schema.olRandomOptions.fields = fields || {};
  return this;
}

function options(options){
  if (options.limit){
    this.schema.olRandomOptions.limit = options.limit;
    delete options.limit
  }
  this.schema.olRandomOptions.options = options || {};
  return this;
}

module.exports = ol;